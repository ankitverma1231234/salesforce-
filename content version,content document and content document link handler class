public class ContentVersionhandler {
    public static void createfile(List<ContentVersion> contentVersions){
       list<ContentDistribution> distributionsToInsert = new List<ContentDistribution>();
        string urlname;
        id ContentDocument;
        list<id> conid=new list<id>();
        for(ContentVersion objContentVersion : contentVersions){
            //if image uploaded then only create public link
           if(objContentVersion.FileType.toLowerCase()=='png'){
                ContentDocument=objContentVersion.ContentDocumentId;
                system.debug('objContentVersion.FileExtension.toLowerCase():' + objContentVersion.FileType);
                ContentDistribution newDist = new ContentDistribution();
                newDist.ContentVersionId = objContentVersion.Id;
                newDist.Name = 'External Link';
                newDist.PreferencesNotifyOnVisit = false;
                newDist.PreferencesAllowViewInBrowser = true;
                newDist.PreferencesAllowOriginalDownload=true;
                distributionsToInsert.add(newDist);
            }
        }
        if(!distributionsToInsert.isEmpty())
        {
            insert distributionsToInsert;
            urlname=distributionsToInsert[0].DistributionPublicUrl;
            system.debug('distributionsToInsert id'+distributionsToInsert[0].id);
            system.debug('distributionsToInsert id'+distributionsToInsert[0].DistributionPublicUrl);
        }
         list<ContentDistribution> distributionsurl =[select id, DistributionPublicUrl from ContentDistribution where id=:distributionsToInsert[0].id];
        system.debug('ddistributionsurl'+distributionsurl);
        system.debug('ddistributionsurl ContentDocument'+ContentDocument);
        list<contentdocumentlink> linklist=[select id,LinkedEntityId,contentdocumentid from contentdocumentlink where contentdocumentid=:ContentDocument];
        system.debug('ddistributionsurl ContentDocument linklist'+linklist);
        for(ContentDistribution obj:distributionsurl){
            urlname=obj.DistributionPublicUrl;
            system.debug('urlname'+urlname);
        }
             //linklist[0].clear();
        system.debug('linklist'+linklist);
       //conid=linklist[1].LinkedEntityId;
        for(contentdocumentlink linkobj:linklist){
           conid.add(linkobj.LinkedEntityId);
        }
        system.debug('conid'+conid);
        list<Contact> clist=[select id,lastname,new_image__c from contact where id=:conid];
        system.debug('clist'+clist);
        list<Contact> updatelist=new list<Contact>();
        for(Contact cobj:clist){
            cobj.new_image__c= urlname;
            system.debug('cobj'+cobj);
            updatelist.add(cobj);
        }
        if(!updatelist.isEmpty()){
            database.update(updatelist);
        }
        system.debug('updatelist'+updatelist);
    }
}



            *********************************************** TRIGGER***************************************************************************
trigger mycontenttrigger on ContentVersion (after insert) {
    if(trigger.isafter){
        if(trigger.isinsert){
             ContentVersionhandler.createfile(trigger.new);
        }
    }
    

}
